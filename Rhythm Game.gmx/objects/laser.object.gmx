<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pink = true;
recycle = false;
clear = 0;
good = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;8;i++)
  yPos[i] += 24;
  
if(clear &lt; 8 &amp;&amp; yPos[clear] &gt; view_hview - view_hview/20){
  if(pink){
    if(abs(chartPlayer.pinkX - xPos[clear]) &lt; 96){
      for(i=0;i&lt;30;i++){
        b=instance_create(xPos[clear],yPos[clear],laserPart);
        b.speed = 5 + random(8);
        b.direction = random_range(20,160);
        b.image_speed = 0;
      }
      good++;
    }
  }else{
    if(abs(chartPlayer.blueX - xPos[clear]) &lt; 96){
      for(i=0;i&lt;30;i++){
        b=instance_create(xPos[clear],yPos[clear],laserPart);
        b.speed = 5 + random(8);
        b.direction = random_range(20,160);
        b.image_speed = 0;
        b.image_index = 1;
      }
      good++;
    }
  }
  clear++;
}

if(yPos[7] &gt; view_hview){
  if(good &lt; 5){
    chartPlayer.hp--;
  }
  instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pink){
  draw_set_color(c_fuchsia);
}else{
  draw_set_color(c_aqua);
}

draw_set_alpha(0.3);

for(i=0;i&lt;7;i++){
  draw_line_width(xPos[i],yPos[i],xPos[i+1],yPos[i+1],16);
  draw_line_width(xPos[i],yPos[i],xPos[i+1],yPos[i+1],8);
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
